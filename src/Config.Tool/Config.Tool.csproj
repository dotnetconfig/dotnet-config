<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Description>A global tool for managing hierarchical configurations for dotnet tools, using git config format.
    
Usage: dotnet config [options]

Location (uses all locations by default)
      --local                use .netconfig.user file
      --global               use global config file
      --system               use system config file
      --path[=VALUE]         use given config file or directory

Action
      --get                  get value: name [value-regex]
      --get-all              get all values: key [value-regex]
      --get-regexp           get values for regexp: name-regex [value-regex]
      --set                  set value: name value [value-regex]
      --set-all              set all matches: name value [value-regex]
      --add                  add a new variable: name value
      --unset                remove a variable: name [value-regex]
      --unset-all            remove all matches: name [value-regex]
      --remove-section       remove a section: name
      --rename-section       rename section: old-name new-name
  -l, --list                 list all
  -e, --edit                 edit the config file in an editor

Other
      --default[=VALUE]      with --get, use default value when missing entry
      --name-only            show variable names only
      --type[=VALUE]         value is given this type, can be 'boolean', '
                               datetime' or 'number'
  -?, -h, --help             Display this help
</Description>

    <OutputType>Exe</OutputType>
    <TargetFrameworks>netcoreapp2.1;netcoreapp3.1;net5.0</TargetFrameworks>
    <RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>

    <AssemblyName>dotnet-config</AssemblyName>
    <RootNamespace>DotNetConfig</RootNamespace>

    <PackageId>dotnet-config</PackageId>
    <ToolCommandName>dotnet-config</ToolCommandName>
    <PackAsTool>true</PackAsTool>
    <Nullable>enable</Nullable>
    <!-- Disable warning about using AsSpan instead of range index on string since it's NET5 only -->
    <NoWarn>$(NoWarn);CA1831</NoWarn>

    <!-- This causes (random?) build failures inside VS but works fine in dotnet build -->
    <DisableStrongNamer Condition="'$(BuildingInsideVisualStudio)' == 'true'">true</DisableStrongNamer>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
    <PackageReference Include="Mono.Options" Version="6.6.0.161" />
    <PackageReference Include="ThisAssembly" Version="1.0.8" PrivateAssets="all" />
    <PackageReference Include="StrongNamer" Version="0.2.5" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.1'">
    <PackageReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp3.1'">
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\Config\Range.cs" Link="Range.cs" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Config\Config.csproj" />
  </ItemGroup>

</Project>
